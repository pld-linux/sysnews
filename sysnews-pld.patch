diff -ur sysnews-0.9.orig/Makefile sysnews-0.9/Makefile
--- sysnews-0.9.orig/Makefile	Sat Apr  6 04:12:28 1996
+++ sysnews-0.9/Makefile	Wed Jul 14 15:21:32 1999
@@ -15,7 +15,7 @@
 CFLAGS	= -Wall -O2
 LDFLAGS = -s
 
-PREFIX	= /usr/local
+PREFIX	= /usr
 
 
 OBJECTS = news.o getopt.o
@@ -33,8 +33,8 @@
 	     -e s,.news_time,$(NEWSTIME),g < news.man > news.1
 
 install: all
-	 install -o bin -g bin -m 555 news $(PREFIX)/bin
-	 install -m 444 news.1 $(PREFIX)/man/man1
+	 install -m 555 news $(PREFIX)/bin
+	 install -m 444 news.1 $(PREFIX)/share/man/man1
 
 release:
 	 tar -cvzf news-$(VERSION).tgz \
diff -ur sysnews-0.9.orig/news.c sysnews-0.9/news.c
--- sysnews-0.9.orig/news.c	Fri Jan 10 18:09:19 1997
+++ sysnews-0.9/news.c	Wed Jul 14 15:21:09 1999
@@ -1,40 +1,49 @@
-/* news.c     - display system news
+/* news.c - display system news
+ * Copyright (C) 1993-6       Charles (int@link.xs4all.nl)
+ * Copyright (C) 1996         Dominik Kubla, <dominik@debian.org>
  *
- * (C) 1993-96	 Charles (int@link.xs4all.nl)
+ * Thiss program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
  *
- * GPL
- */
-
-/* $Source$
- * $Revision$
- * $Date$
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
  */
 
+#ifndef lint
 static char rcsid[] = "$Id$";
+#endif
 
+#include <ctype.h>
+#include <dirent.h>
+#include <errno.h>
+#include <fcntl.h>
+#include <limits.h>
+#include <pwd.h>
 #include <stdio.h>
 #include <stdlib.h>
-#include <unistd.h>
-#include <ctype.h>
 #include <string.h>
-#include <dirent.h>
+#include <termios.h>
+#include <unistd.h>
+#include <utime.h>
 #include <sys/ioctl.h>
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <sys/time.h>
-#include <utime.h>
-#include <fcntl.h>
-#include <pwd.h>
-#include <termios.h>
-#include <errno.h>
-#include <limits.h>
+
 #include "getopt.h"
 #include "news.h"
 
-
 char  *progname;
-char  *newsdir = NEWSDIR;
-char  *dformat = DATEFORMAT;
+const char  *newsdir = NEWSDIR;
+const char  *dformat = DATEFORMAT;
 char  **exclude_list = 0;
 int   nr_exclude = 0;
 
@@ -60,7 +69,7 @@
 /*
  * MAIN
  */
-void main(int argc, char **argv)
+int main(int argc, char **argv)
 {
   int	ac = 0, n, i;
   char *av[32], **nav, *env;
@@ -88,7 +97,7 @@
      else
       read_sysnews(argc, argv);
 
-  exit(0);
+  exit(EXIT_SUCCESS);
 }
 
 
@@ -161,13 +170,13 @@
 		   break;
 	      case 'V':
 		   printf("news version %s\n", VERSION);
-		   exit(0);
+		   exit(EXIT_SUCCESS);
 	      case 'h':            /* hm. what could this be? */
 		   print_usage();
-		   exit(0);
+		   exit(EXIT_SUCCESS);
 	      default:
 		   fprintf(stderr, "Type `%s --help' for more information.\n", progname);
-		   exit(1);
+		   exit(EXIT_FAILURE);
 		   break;
 	}
 
@@ -185,14 +194,17 @@
   char	 tmp[512];
   char	 *newsnames;
   int	 art_cnt = 0, avc;
-  int	 cols = 80;
+  unsigned short	 cols = 80;
   int	 ret;
 
+     /* Clearout temporary data space. */
+     (void) memset(tmp, 0, 512);
+
      home = getenv("HOME");
      if(!home)
        {
 	  fprintf(stderr, "%s: error: you are homeless!\n", progname);
-	  exit(1);
+	  exit(EXIT_FAILURE);
        }
      sprintf(line, "%s/%s", home, NEWSTIME);
 
@@ -200,7 +212,7 @@
      if(ret < 0)
        {
 	 if(errno != ENOENT)
-	   exit(1);
+	   exit(EXIT_FAILURE);
 	 if(!f.all && !f.items && !f.names && !argv[optind])
 	   {
 	     ret = creat(line, 0600);
@@ -219,8 +231,14 @@
 	     cols = win.ws_col;
       }
 #endif
-     newsnames = malloc(cols);
-     newsnames[0] = 0;
+     errno = 0;
+     newsnames = malloc((size_t)cols);
+     if (newsnames == NULL)
+      {
+        perror("news: ");
+        exit(EXIT_FAILURE);
+      }
+     memset(newsnames, 0, cols);
 
 
     if(!f.all && !f.items && !f.names && !argv[optind])
@@ -236,7 +254,7 @@
      if(!dfp)
        {
 	 fprintf(stderr, "%s: opendir(%s): %s\n", progname, newsdir, ERRMSG);
-	 exit(1);
+	 exit(EXIT_FAILURE);
        }
 
 
@@ -270,7 +288,7 @@
 		  {
 		    pfp = open_pager();
 		    if(!pfp)
-		      exit(1);
+		      exit(EXIT_FAILURE);
 		  }
 
 		pw = getpwuid(st.st_uid);
@@ -368,7 +386,7 @@
 FILE *open_pager()
 {
   FILE *pfp;
-  char *pager;
+  const char *pager;
 
      if(!(pager = f.pager) && !(pager = getenv("PAGER")))
       pager = DEF_PAGER;
@@ -415,7 +433,7 @@
      if(!dfp)
        {
 	 fprintf(stderr, "Error opening newsdir (%s): %s\n", newsdir, ERRMSG);
-	 exit(1);
+	 exit(EXIT_FAILURE);
        }
 
      chdir(newsdir);
@@ -436,9 +454,12 @@
 
 	 for(i = 0; i < nr_exclude; i++)
 	   if(!strcmp(exclude_list[i], dir->d_name))
-	     continue;
+	     break;
+	 if(i<nr_exclude)
+	   continue;
 
-	 stat(dir->d_name, &st);
+	 if(stat(dir->d_name, &st))
+	   continue;
 	 if(st.st_mtime < exp_t)
 	  {
 	    ret = unlink(dir->d_name);
@@ -496,11 +517,16 @@
 			lineidx = 0;
 			st = 0;
 
+			errno = 0;
 			if(!nr_exclude)
 			  exclude_list = (char **)malloc(sizeof(char *));
 			else
 			  exclude_list = (char **)realloc(exclude_list,
 					       sizeof(char *) * (nr_exclude + 1));
+			if (exclude_list == NULL) {
+				perror("news: ");
+				exit(EXIT_FAILURE);
+			}
 			exclude_list[nr_exclude++] = strdup(line);
 		      }
 		    if(!*str)
@@ -512,7 +538,7 @@
 		   if(lineidx >= NAME_MAX)
 		     {
 		       fprintf(stderr, "add_exclude: filename too long (%d)\n", lineidx);
-		       exit(1);
+		       exit(EXIT_FAILURE);
 		     }
 		   break;
 	    }
diff -ur sysnews-0.9.orig/news.h sysnews-0.9/news.h
--- sysnews-0.9.orig/news.h	Thu Jul  6 10:40:45 1995
+++ sysnews-0.9/news.h	Wed Jul 14 15:21:09 1999
@@ -10,7 +10,17 @@
  * $Date$
  */
 
-#define DEF_PAGER       "more"
+#define VERSION		"0.9"
+
+#ifndef NEWSDIR
+  #define NEWSDIR      "/var/sysnews"
+#endif
+#ifndef NEWSTIME
+  #define NEWSTIME     ".news_time"
+#endif
+#ifndef DEF_PAGER
+  #define DEF_PAGER       "more"
+#endif
 #define NOEXPFILE       ".noexpire"
 #define DATEFORMAT      "(%b %d %Y)"
 #define ERRMSG          strerror(errno)
@@ -22,13 +32,13 @@
 
 
 struct {
-  int    all:1;
-  int    items:1;
-  int    names:1;
-  int	 page:1;
-  int    oneperline:1;
-  int    datestamp:1;
-  int    verbose:1;
+  int    all;
+  int    items;
+  int    names;
+  int	 page;
+  int    oneperline;
+  int    datestamp;
+  int    verbose;
   int	 expire;
   char	 *pager;
   } f;
@@ -43,7 +53,7 @@
 
 
 /* news.c */
-void main __PROTO((int argc , char **argv ));
+int main __PROTO((int argc , char **argv ));
 int implode __PROTO((char *str , char *av [], int max ));
 void parse_args __PROTO((int argc , char **argv ));
 void read_sysnews __PROTO((int argc , char **argv ));
